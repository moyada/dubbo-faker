<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.moyada.dubbo.faker.core.dao.FakerDAO">

	<insert id="saveInvokeInfo">
		INSERT INTO `method_invoke`
		(`app_id`, `app_name`, `class_name`, `method_name`, `param_type`, `return_type`)
		VALUE
		(#{appId}, #{appName}, #{className}, #{methodName}, #{paramType}, #{returnType});
	</insert>

	<select id="findAll" resultType="methodInvokeDO">
		SELECT `id`, `app_id`, `app_name`, `class_name`, `method_name`, `param_type`, `return_type`
		FROM `method_invoke`;
	</select>

	<select id="findInvokeInfoById" resultType="methodInvokeDO">
		SELECT `id`, `app_id`, `app_name`, `class_name`, `method_name`, `param_type`, `return_type`
		FROM `method_invoke`
		WHERE id = #{id};
	</select>

	<select id="findParamByType" resultType="String">
		SELECT `param_value`
		FROM `invoke_param`
		WHERE app_id = #{appId}
		AND `type` = #{type};
	</select>

	<insert id="saveLog">
		INSERT INTO `faker_log`
		(`faker_id`, `invoke_id`, `real_param`, `code`, `result`, `message`, `spend_time`, `invoke_time`)
		VALUE
		(#{fakerId}, #{invokeId}, #{realParam}, #{code}, #{result}, #{message}, #{spendTime}, #{invokeTime});
	</insert>


	<select id="findAllApp" resultType="methodInvokeDO">
		SELECT `app_id`, `app_name`
		FROM `method_invoke`
		GROUP BY `app_id`
	</select>

	<select id="findClassByApp" resultType="String">
		SELECT `class_name`
		FROM `method_invoke`
		WHERE `app_id` = #{appId}
		GROUP BY `class_name`
	</select>

	<select id="findMethodByClass" resultType="methodInvokeDO">
		SELECT `id`, `method_name`, `param_type`, `return_type`
		FROM `method_invoke`
		WHERE `class_name` = #{className}
	</select>

	<select id="countMethodByFakerId" resultType="int">
		SELECT count(*)
		FROM `faker_log`
		WHERE `faker_id` = #{fakerId}
	</select>

	<select id="findMethodByFakerId" resultType="logDO">
		SELECT a.`id`, `real_param`, `code`, `result`, `message`, `spend_time`, `invoke_time`
		FROM `faker_log` a,
		(
		SELECT id
		FROM `faker_log`
		WHERE `faker_id` = #{fakerId}
		ORDER BY `code` DESC, `spend_time` DESC
		LIMIT ${offset}, ${pageSize}
		) b
		WHERE a.`id` = b.`id`
	</select>
</mapper>